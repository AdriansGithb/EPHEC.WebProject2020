@using Microsoft.AspNetCore.Authentication
@using Microsoft.CodeAnalysis
@using MyLibrary.Constants
@model IEnumerable<MyLibrary.ViewModels.EstablishmentNewsVwMdl>

@section AddMapToHead{
    @*mapbox : base adding*@
    <script src="https://api.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.js"></script>
    <link href="https://api.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.css" rel="stylesheet" />
    @*refresh page : 15min (15*60)*@
    <meta http-equiv="refresh" content="900">
}
<style>
    .mapboxgl-popup {
        width: 400px;
        font: 12px/20px 'Helvetica Neue', Arial, Helvetica, sans-serif;
    }

    .mapboxgl-marker {
        cursor: pointer
    }
</style>
<h1 class="text-center">Welcome @User.Identity.Name !</h1>
<hr />
@if (User.Identity.IsAuthenticated)
{
    <h3 class="text-center text-dark">You can see here all our open establishments</h3>
}
else
{
    <h3 class="text-center text-dark">You can see here all our establishments</h3>
}
@* Map *@
<div id='map' style='width: 100%; height: 400px;'></div>

<div id="myCarousel" class="carousel slide" data-ride="carousel" style='width: 100%; height: 300px;'>

    <!-- Indicators -->
    <ul class="carousel-indicators">
        <li data-target="#myCarousel" data-slide-to="0" class="active"></li>
        <li data-target="#myCarousel" data-slide-to="1"></li>
        <li data-target="#myCarousel" data-slide-to="2"></li>
        @if (Model.Count() > 3)
        {
            for (int i = 3; i < Model.Count(); i++)
            {
                <li data-target="#myCarousel" data-slide-to="@i"></li>
            }
        }
    </ul>
        <!-- The slideshow -->
    <div class="carousel-inner">
        @foreach (var news in Model)
        {
            <div class="carousel-item @(news == Model.First() ? "active" : "")">
                    <div class="col-12">
                        <div class="card border-0">
                            <div class="card-body font-italic">
                                <h5 class="text-center">@news.Title</h5>
                                <blockquote class="blockquote">
                                    <p>@news.Text</p>
                                    <footer class="blockquote-footer">From @news.EstablishmentName | Last Update : @news.UpdatedDate</footer>
                                </blockquote>
                            </div>
                        </div>
                    </div>
            </div>
        }
    </div>
    
    <!-- Left and right controls -->
    <a class="carousel-control-prev" href="#myCarousel" data-slide="prev">
        <span class="carousel-control-prev-icon"></span>
    </a>
    <a class="carousel-control-next" href="#myCarousel" data-slide="next">
        <span class="carousel-control-next-icon"></span>
    </a>
</div>





@section Scripts
{
    <script src="https://unpkg.com/es6-promise@4.2.4/dist/es6-promise.auto.min.js"></script>
    <script src="https://unpkg.com/@@mapbox/mapbox-sdk/umd/mapbox-sdk.min.js"></script>
    <script>

        mapboxgl.accessToken = '@MyMVCConstants.MyMVC_MapBox_Token';

        // map creation
        var map = new mapboxgl.Map({
            container: 'map',
            style: 'mapbox://styles/mapbox/streets-v11',
            center: [4.35, 50.84], // starting position
            zoom: 8 // starting zoom
        });

        // Add zoom and rotation controls to the map.
        map.addControl(new mapboxgl.NavigationControl(), 'bottom-right');

        // Add geolocate control to the map.
        map.addControl(
            new mapboxgl.GeolocateControl({
                positionOptions: {
                    enableHighAccuracy: true
                },
                trackUserLocation: true
            }),
            'bottom-right'
        );
        // Add full screen button
        map.addControl(new mapboxgl.FullscreenControl(), 'top-right');


        // add markers
        $(document).ready(function() {
            $.getJSON("/Home/GetAddresses",
                function(data, status) {
                    if (status == "success") {
                        $.each($.parseJSON(data),
                            function(i, obj) {
                                AddMarkers(obj);
                            });
                    } else {
                        displayToastrMsg("Admin rights have ended with some issue. Please try again", "Admin rights unsaved", "Error");
                    }
                });
        });

        function AddMarkers(address) {
            var queryString = address.houseNumber + "," + address.boxNumber + "," + address.street + "," + address.zipCode + "," + address.city + "," + address.country;
            var mapboxClient = mapboxSdk({ accessToken: mapboxgl.accessToken });
            mapboxClient.geocoding
                .forwardGeocode({
                    query: queryString,
                    autocomplete: false,
                    limit: 1
                })
                .send()
                .then(function(response) {
                    if (
                        response &&
                            response.body &&
                            response.body.features &&
                            response.body.features.length
                    ) {
                        var feature = response.body.features[0];

                        var popBody = "<h5><a class='font-weight-bold text-dark' href='https://localhost:44352/Establishments/Details/"
                            + address.establishmentId + "' target='_blank'>" + address.establishmentName + "</a></h5><hr/>"
                            + "<h6 class='font-italic text-secondary'>" + address.establishmentType + "</h6>"
                            + "<p class='text-secondary'> Open from : " + address.openHour + " / to :" + address.closeHour+ "</p>";
                        // Adds the marker
                        new mapboxgl.Marker()
                            .setLngLat(feature.center)
                            .setPopup(new mapboxgl.Popup().setHTML(popBody))
                            .addTo(map);
                    }
                });
        };

    </script>
}